---
layout: base.njk
title: Home
---

<div class="min-h-screen flex flex-col md:flex-row">
  <!-- Mobile Menu Button -->
  <button 
    id="menuToggle" 
    class="md:hidden fixed top-4 right-4 z-50 p-2 bg-white/[0.01] backdrop-blur-xl border border-[#e3e3e3]"
    aria-label="Toggle navigation menu"
    aria-expanded="false"
  >
    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path id="menuIcon" class="block" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
      <path id="closeIcon" class="hidden" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
    </svg>
  </button>

  <!-- Sidebar (Filters) -->
  <aside class="fixed bg-white/[0.01] backdrop-blur-xl md:static inset-0 transform -translate-x-full md:translate-x-0 transition-transform duration-250 ease-in-out w-full md:w-60 p-8 navigation z-40">
    <h1 class="text-lg sitetitle mt-12 md:mt-0">Brandon Harwood</h1>
    <ul class="mt-4 space-y-4">
      <li><a href="#" class="filter-link active" data-filter="weblog">weblogs</a></li>
      <li><a href="#" class="filter-link active" data-filter="collection">collections</a></li>
      <li><a href="#" class="filter-link active" data-filter="made thing">made things</a></li>
      <li><a href="#" class="filter-link active" data-filter="weird interaction">weird interactions</a></li>
      <li><a href="#" class="filter-link active" data-filter="answered question">answering questions</a></li>
    </ul>

    <!-- Active tag filters section -->
    <div id="activeTagsSection" class="hidden mt-8">
      <h2 class="text-sm font-manrope mb-2">Active Tags:</h2>
      <div id="activeTags" class="flex flex-wrap gap-2">
        <!-- Active tags will be inserted here -->
      </div>
    </div>
  </aside>

  <!-- Main Content -->
<main class="flex flex-col items-center p-8 md:px-20 pt-16 pb-16 gap-6 flex-1">
  <div class="flex flex-col items-center pb-4 gap-4 w-full max-w-[75rem]">
    <h1 class="site-header w-full">
      This is a website for Brandon Harwood to make things and break things and write things <a href="#" class="about-reveal" aria-expanded="false" role="button" tabindex="0">and</a>
    </h1>

    <!-- About Section (Hidden by default) -->
    <section id="about-section" class="hidden w-full max-w-[75rem] pb-20 font-baskerville">
      <div class="flex flex-col gap-8">
        <div class="flex gap-4">
          <div class="flex-1 max-w-[10.25rem]">
            <div class="italic text-left">it's a place</div>
          </div>
          <div class="flex-1">
            <p>where made and broken and written things can be pushed out to the internet without worrying over whether they're perfect, or done, or if people find them interesting, or anything.<br/><br/>They're for me to use and gather over time, <span class="italic">and</span> for others to check out if they want.</p>
          </div>
        </div>

        <div class="flex gap-4">
          <div class="flex-1 max-w-[10.25rem]">
            <div class="italic text-left">it's not</div>
          </div>
          <div class="flex-1">
            <p><a href="#" class="text-[#001EFF] underline">my portfolio</a>, but there will most likely be things posted here that will show up there eventually.</p>
          </div>
        </div>

        <div class="flex gap-4">
          <div class="flex-1 max-w-[10.25rem]">
            <div class="italic text-left">in a way</div>
          </div>
          <div class="flex-1">
            <p>it's kind of a replacement for social media, since social media stopped doing what I enjoyed about it in the first place. It's probably going to focus more on things like technologies, cultures, futures, sciences, and design, but I'll probably post my dog and cat and pictures of vacations every once in a while too.</p>
          </div>
        </div>

        <div class="flex gap-4">
          <div class="flex-1 max-w-[10.25rem]">
            <div class="italic text-left">I'm not</div>
          </div>
          <div class="flex-1">
            <p>forcing anything, or intending to shove data slop at people for the sake of influence. I'm not even sure I'll track analytics. Y'all should only see what I'm shouting out into the void if you're really that interested enough to go out of your way and look for it here - or if you're really that interested and subscribe to updates through RSS or Email.</p>
          </div>
        </div>

        <div class="flex gap-4">
          <div class="flex-1 max-w-[10.25rem]">
            <div class="italic text-left">it's a way to play</div>
          </div>
          <div class="flex-1">
            <p>with the concept of why we post things on the internet, and experiment with how we interact and collaborate with each other as a wide community and network of friends and strangers - maybe in ways that aren't conventional, or just for fun.</p>
          </div>
        </div>

        <div class="flex gap-4">
          <div class="flex-1 max-w-[10.25rem]">
            <div class="italic text-left">I'm just</div>
          </div>
          <div class="flex-1">
            <p>going to start this without really knowing where it'll go</p>
          </div>
        </div>

        <div class="flex gap-4">
          <div class="flex-1 max-w-[10.25rem]">
            <div class="italic text-left">but the cool thing is</div>
          </div>
          <div class="flex-1">
            <p>I can change it whenever I want</p>
          </div>
        </div>
      </div>
    </section>

    <!-- Blog Feed Section -->
    <section id="feed" class="w-full max-w-[75rem] space-y-4">
      {% for post in collections.all | reverse %}
        <article class="post-card flex flex-col md:flex-row gap-4 py-6 border-t border-[#C0C0C0]" data-type="{{ post.data.type }}">
          <!-- Left Column - Type and Date only -->
          <div class="w-full md:max-w-[10.25rem] flex flex-col gap-4">
            <div class="text-black text-base font-italic font-baskerville italic underline leading-7">
              {{ typeToSingular[post.data.type] or post.data.type }}
            </div>
            <div class="text-[#000000] text-xs font-baskerville italic">
              {{ post.date | date("MMMM d, yyyy") }}
            </div>
          </div>

          <!-- Right Column - Content -->
          <div class="flex-1 flex flex-col gap-6">
            <!-- Image (if exists) -->
            {% if post.data.image %}
              <div class="w-full h-[400px] rounded overflow-hidden flex items-center justify-center">
                <img 
                  src="{{ post.data.image }}" 
                  alt="{{ post.data.image_alt }}" 
                  class="w-full h-full object-cover"
                >
              </div>
            {% endif %}

            <!-- Title -->
            <h2 class="text-black text-[28px] font-manrope font-semibold">
              {% if post.data.external %}
                <a href="{{ post.data.link }}" target="_blank" rel="noopener noreferrer">{{ post.data.title }}</a>
              {% else %}
                <a href="{{ post.url }}">{{ post.data.title }}</a>
              {% endif %}
            </h2>

            <!-- Description -->
            <div class="text-black prose font-baskerville text-base leading-7">
              {{ post.data.description }}
            </div>

            <!-- Tags and Social -->
            <div class="flex justify-between items-center">
              <div class="flex-1">
                <span class="text-[#333333] text-xs font-manrope font-medium leading-7">Tags:</span>
                {% for tag in post.data.tags %}
                  {% if tag != "post" %}
                    <a href="#" 
                      class="tag-filter text-[#333333] text-xs font-baskerville underline leading-7" 
                      data-tag="{{ tag }}"
                      role="button"
                      aria-pressed="false"
                    >{{ tag }}</a>{% if not loop.last %}, {% endif %}
                  {% endif %}
                {% endfor %}
              </div>
              
              <!-- Social Icons -->
              <div class="flex gap-4">
                <button class="w-6 h-6 bg-[#333333] mask-twitter" aria-label="Share on Twitter"></button>
                <button class="w-6 h-6 bg-[#333333] mask-facebook" aria-label="Share on Facebook"></button>
                <button class="w-6 h-6 bg-[#333333] mask-linkedin" aria-label="Share on LinkedIn"></button>
              </div>
            </div>
          </div>
        </article>
      {% endfor %}
    </section>
  </main>
</div>

<script>
  // Update the mapping to match the content file types
  const typeToSingular = {
    'weblog': 'weblog',
    'collection': 'collection',
    'made thing': 'made thing',
    'weird interaction': 'weird interaction',
    'answered question': 'answered question'
  };

  // Update the initial active filters to match the content types
  const activeFilters = new Set(['weblog', 'collection', 'made thing', 'weird interaction', 'answered question']);
  const activeTags = new Set();
  
  const filterLinks = document.querySelectorAll('.filter-link');
  const tagLinks = document.querySelectorAll('.tag-filter');
  const activeTagsSection = document.getElementById('activeTagsSection');
  const activeTagsContainer = document.getElementById('activeTags');
  let isFirstSelection = true;  // Track if this is the first filter selection

  // Initialize all filters as active
  filterLinks.forEach(link => {
    link.classList.add('active');
  });

  // Initial display of all cards
  updateCardVisibility();

  filterLinks.forEach(link => {
    link.addEventListener('click', function(e) {
      e.preventDefault();
      const filter = this.dataset.filter;
      
      // If clicking an active filter when it's the only one selected, do nothing
      if (activeFilters.size === 1 && activeFilters.has(filter)) {
        return;
      }

      // If this is the first filter selection and we're activating a filter
      if (isFirstSelection && !activeFilters.has(filter)) {
        // Clear all other filters
        activeFilters.clear();
        filterLinks.forEach(link => link.classList.remove('active'));
        // Add only the selected filter
        activeFilters.add(filter);
        this.classList.add('active');
        // Mark that we've made our first selection
        isFirstSelection = false;
      } else {
        // After first selection, just toggle the clicked filter
        if (activeFilters.has(filter)) {
          activeFilters.delete(filter);
          this.classList.remove('active');
        } else {
          activeFilters.add(filter);
          this.classList.add('active');
        }
      }

      updateCardVisibility();

      // Handle mobile menu if needed
      if (window.innerWidth < 768) {
        toggleMenu();
      }
    });
  });

  function updateCardVisibility() {
    document.querySelectorAll('.post-card').forEach(card => {
      const type = card.dataset.type;
      const cardTags = Array.from(card.querySelectorAll('.tag-filter')).map(tag => tag.dataset.tag);
      
      const matchesType = activeFilters.size === 0 || activeFilters.has(type);
      const matchesTags = activeTags.size === 0 || Array.from(activeTags).some(tag => cardTags.includes(tag));
      
      card.style.display = matchesType && matchesTags ? 'flex' : 'none';
    });
  }

  // Existing mobile menu logic
  const menuToggle = document.getElementById('menuToggle');
  const sidebar = document.querySelector('.navigation');
  const menuIcon = document.getElementById('menuIcon');
  const closeIcon = document.getElementById('closeIcon');

  const toggleMenu = () => {
    const isExpanded = menuToggle.getAttribute('aria-expanded') === 'true';
    menuToggle.setAttribute('aria-expanded', !isExpanded);
    sidebar.classList.toggle('-translate-x-full');
    menuIcon.classList.toggle('hidden');
    closeIcon.classList.toggle('hidden');
  };

  menuToggle.addEventListener('click', toggleMenu);

  // Close menu when clicking outside on mobile
  document.addEventListener('click', (e) => {
    if (
      window.innerWidth < 768 &&
      !sidebar.contains(e.target) &&
      !menuToggle.contains(e.target) &&
      !sidebar.classList.contains('-translate-x-full')
    ) {
      toggleMenu();
    }
  });

  // Add this new code after the existing JavaScript
  const aboutReveal = document.querySelector('.about-reveal');
  const aboutSection = document.getElementById('about-section');

  const toggleAbout = () => {
    const isExpanded = aboutReveal.getAttribute('aria-expanded') === 'true';
    aboutReveal.setAttribute('aria-expanded', !isExpanded);
    aboutSection.classList.toggle('hidden');
  };

  aboutReveal.addEventListener('click', (e) => {
    e.preventDefault();
    toggleAbout();
  });

  aboutReveal.addEventListener('keydown', (e) => {
    if (e.key === 'Enter' || e.key === ' ') {
      e.preventDefault();
      toggleAbout();
    }
  });

  // Function to update the active tags display
  function updateActiveTagsDisplay() {
    if (activeTags.size > 0) {
      activeTagsSection.classList.remove('hidden');
      activeTagsContainer.innerHTML = Array.from(activeTags).map(tag => `
        <button 
          class="px-2 py-1 bg-gray-100 rounded-full text-xs font-manrope flex items-center gap-1"
          onclick="removeTag('${tag}')"
        >
          ${tag}
          <span class="text-gray-500">×</span>
        </button>
      `).join('');
    } else {
      activeTagsSection.classList.add('hidden');
      activeTagsContainer.innerHTML = '';
    }
  }

  // Function to remove a tag filter
  function removeTag(tag) {
    activeTags.delete(tag);
    document.querySelectorAll(`.tag-filter[data-tag="${tag}"]`).forEach(el => {
      el.setAttribute('aria-pressed', 'false');
    });
    updateActiveTagsDisplay();
    updateCardVisibility();
  }

  // Add click handlers for tag filters
  tagLinks.forEach(link => {
    link.addEventListener('click', (e) => {
      e.preventDefault();
      const tag = e.target.dataset.tag;
      
      if (activeTags.has(tag)) {
        activeTags.delete(tag);
        e.target.setAttribute('aria-pressed', 'false');
      } else {
        activeTags.add(tag);
        e.target.setAttribute('aria-pressed', 'true');
      }
      
      updateActiveTagsDisplay();
      updateCardVisibility();
    });
  });
</script>
