---
layout: base.njk
title: Home
---

<div class="min-h-screen flex flex-col md:flex-row">
  <!-- Mobile Menu Button -->
  <button 
    id="menuToggle" 
    class="md:hidden fixed top-4 right-4 z-50 p-2 bg-white/[0.01] backdrop-blur-xl border border-[#e3e3e3]"
    aria-label="Toggle navigation menu"
    aria-expanded="false"
  >
    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path id="menuIcon" class="block" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
      <path id="closeIcon" class="hidden" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
    </svg>
  </button>

  <!-- Sidebar (Filters) -->
  <aside class="fixed bg-white/[0.01] backdrop-blur-xl md:static inset-0 transform -translate-x-full md:translate-x-0 transition-transform duration-250 ease-in-out w-full md:w-60 p-8 navigation z-40">
    <h1 class="text-lg sitetitle mt-12 md:mt-0">Brandon Harwood</h1>
    <ul class="mt-4 space-y-4">
      <li><a href="#" class="filter-link active" data-filter="weblogs">weblogs</a></li>
      <li><a href="#" class="filter-link active" data-filter="collections">collections</a></li>
      <li><a href="#" class="filter-link active" data-filter="made-things">made things</a></li>
      <li><a href="#" class="filter-link active" data-filter="weird-interactions">weird interactions</a></li>
      <li><a href="#" class="filter-link active" data-filter="answering-questions">answering questions</a></li>
    </ul>
  </aside>

  <!-- Main Content -->
<main class="flex flex-col items-center p-8 md:px-20 pt-16 pb-0 gap-6 flex-1">
  <div class="flex flex-col items-center pb-8 gap-4 w-full max-w-[75rem]">
    <h1 class="site-header w-full">
      This is a website for Brandon Harwood to make things and break things and write things <a href="#" class="about-reveal">and</a>
    </h1>

    <!-- Blog Feed Section -->
    <section id="feed" class="w-full max-w-[75rem] space-y-6">
      {% for post in collections.all %}
        <article class="post-card flex gap-4 py-6 border-t border-[#C0C0C0]" data-type="{{ post.data.type }}">
          <!-- Left Column - Type and Date -->
          <div class="flex-1 flex flex-col items-end gap-4 pt-1 pb-1">
            <div class="w-full text-black text-base font-italic font-baskerville italic underline leading-7">
              {{ post.data.type }}
            </div>
            <div class="w-full text-[#333333] text-xs font-baskerville italic">
              {{ post.date | date("MMMM d, yyyy") }}
            </div>
          </div>

          <!-- Right Column - Content -->
          <div class="flex-1 flex flex-col gap-6">
            {% if post.data.image %}
              <div class="w-full h-[400px] rounded overflow-hidden flex items-center justify-center">
                <img 
                  src="{{ post.data.image }}" 
                  alt="{{ post.data.image_alt }}" 
                  class="w-full h-full object-cover"
                >
              </div>
            {% endif %}

            <div class="flex flex-col gap-4">
              <h2 class="text-black text-[28px] font-manrope font-semibold">
                {% if post.data.external %}
                  <a href="{{ post.data.link }}" target="_blank" rel="noopener noreferrer">{{ post.data.title }}</a>
                {% else %}
                  <a href="{{ post.url }}">{{ post.data.title }}</a>
                {% endif %}
              </h2>
              
              <div class="prose font-baskerville text-base leading-7">
                {{ post.data.description }}
              </div>
            </div>

            <!-- Tags and Social -->
            <div class="flex justify-between items-center">
              <div class="flex-1">
                <span class="text-[#333333] text-xs font-manrope font-medium leading-7">Tags:</span>
                {% for tag in post.data.tags %}
                  {% if tag != "post" %}
                    <a href="/tags/{{ tag | slugify }}" class="text-[#333333] text-xs font-baskerville underline leading-7">{{ tag }}</a>{% if not loop.last %}, {% endif %}
                  {% endif %}
                {% endfor %}
              </div>
              
              <!-- Social Icons -->
              <div class="flex gap-4">
                <button class="w-6 h-6 bg-[#333333] mask-twitter" aria-label="Share on Twitter"></button>
                <button class="w-6 h-6 bg-[#333333] mask-facebook" aria-label="Share on Facebook"></button>
                <button class="w-6 h-6 bg-[#333333] mask-linkedin" aria-label="Share on LinkedIn"></button>
              </div>
            </div>
          </div>
        </article>
      {% endfor %}
    </section>
  </main>
</div>

<script>
  const activeFilters = new Set(['weblogs', 'collections', 'made-things', 'weird-interactions', 'answering-questions']);
  const filterLinks = document.querySelectorAll('.filter-link');
  let isFirstSelection = true;  // Track if this is the first filter selection

  // Initialize all filters as active
  filterLinks.forEach(link => {
    link.classList.add('active');
  });

  // Initial display of all cards
  updateCardVisibility();

  filterLinks.forEach(link => {
    link.addEventListener('click', function(e) {
      e.preventDefault();
      const filter = this.dataset.filter;
      
      // If clicking an active filter when it's the only one selected, do nothing
      if (activeFilters.size === 1 && activeFilters.has(filter)) {
        return;
      }

      // If this is the first filter selection and we're activating a filter
      if (isFirstSelection && !activeFilters.has(filter)) {
        // Clear all other filters
        activeFilters.clear();
        filterLinks.forEach(link => link.classList.remove('active'));
        // Add only the selected filter
        activeFilters.add(filter);
        this.classList.add('active');
        // Mark that we've made our first selection
        isFirstSelection = false;
      } else {
        // After first selection, just toggle the clicked filter
        if (activeFilters.has(filter)) {
          activeFilters.delete(filter);
          this.classList.remove('active');
        } else {
          activeFilters.add(filter);
          this.classList.add('active');
        }
      }

      updateCardVisibility();

      // Handle mobile menu if needed
      if (window.innerWidth < 768) {
        toggleMenu();
      }
    });
  });

  function updateCardVisibility() {
    document.querySelectorAll('.post-card').forEach(card => {
      const type = card.dataset.type;
      if (activeFilters.size === 0 || activeFilters.has(type)) {
        card.style.display = 'block';
      } else {
        card.style.display = 'none';
      }
    });
  }

  // Existing mobile menu logic
  const menuToggle = document.getElementById('menuToggle');
  const sidebar = document.querySelector('.navigation');
  const menuIcon = document.getElementById('menuIcon');
  const closeIcon = document.getElementById('closeIcon');

  const toggleMenu = () => {
    const isExpanded = menuToggle.getAttribute('aria-expanded') === 'true';
    menuToggle.setAttribute('aria-expanded', !isExpanded);
    sidebar.classList.toggle('-translate-x-full');
    menuIcon.classList.toggle('hidden');
    closeIcon.classList.toggle('hidden');
  };

  menuToggle.addEventListener('click', toggleMenu);

  // Close menu when clicking outside on mobile
  document.addEventListener('click', (e) => {
    if (
      window.innerWidth < 768 &&
      !sidebar.contains(e.target) &&
      !menuToggle.contains(e.target) &&
      !sidebar.classList.contains('-translate-x-full')
    ) {
      toggleMenu();
    }
  });
</script>
